{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/2014-10-20-use-new-relic-in-rails4-at-heroku.md"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCWAY,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,UAHF,MAIMN,EAAKC,KAAKC,aAAaK,Y,iVCnC9B,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iDAAgC,kBAAIC,WAAW,MAA/C,wCAEA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,wGADT,gBAAH,IAE8B,+BAAGA,WAAW,KAAQ,CAChD,KAAQ,sEADkB,0BAF9B,aAQA,6DACA,sCACA,8CACA,uCACA,8CACA,0DAAyC,kBAAIA,WAAW,MAAxD,qCAEA,kEACA,sDACA,+CACA,0GACE,0BAAYA,WAAW,KAAvB,mCADF,wBAEA,iCACA,iDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBACb,WAAc,sBACd,uBAAuB,IAHtB,oEASL,kCACA,uFAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBACb,WAAc,sBACd,uBAAuB,IAHtB,mFAQL,iCACA,yCAAwB,kBAAIA,WAAW,MAAvC,+CAEA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,mCADT,mCAGH,mCACA,wDACA,mCACA,qEAEA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,uCADT,uBAAH,mBAGA,iCACA,qBAAG,0BAAYA,WAAW,KAAvB,iBAAH,WACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iGAKL,+BACA,iFAKJJ,EAAWK,gBAAiB","file":"component---src-pages-2014-10-20-use-new-relic-in-rails-4-at-heroku-md-183dfa7a8cca33a0e8a5.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Rails4アプリにNew Relicを入れます。`}<br parentName=\"p\"></br>{`\n`}{`herokuで動かす場合はadd-onとかの設定が必要でした。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://docs.newrelic.com/docs/agents/ruby-agent/installation-configuration/ruby-agent-installation\"\n      }}>{`New Relicの本家`}</a>{`と`}<a parentName=\"p\" {...{\n        \"href\": \"https://devcenter.heroku.com/articles/newrelic#ruby-configuration\"\n      }}>{`herokuのNew Relicの適用ページ`}</a>{`が参考になります。`}</p>\n    {\n      /* more */\n    }\n    <p>{`New Relicへの登録をすませると、手順ページが表示されていきます。`}</p>\n    <h1>{`New Relicの設定`}</h1>\n    <h2>{`Choose your language`}</h2>\n    <p>{`言語をRubyに選択します。`}</p>\n    <h2>{`Get your license key`}</h2>\n    <p>{`Generate license keyを単にクリックするだけです。`}<br parentName=\"p\"></br>{`\n`}{`これで、newrelic.ymlをダウンロードできます。`}</p>\n    <h2>{`Install the New Relic agent with bundler`}</h2>\n    <p>{`Gemfileの修正と、gemのインストールを実行します。`}</p>\n    <h2>{`Download newrelic.yml`}</h2>\n    <p>{`license keyを生成すると、Donwload the newrelic.yml fileが有効になりますので、クリックしてファイルを取得します。\nその後、`}<inlineCode parentName=\"p\">{`\\${APP_ROOT}/config/newrelic.yml`}</inlineCode>{`にダウンロードしたファイルを配置します。`}</p>\n    <h2>{`アプリ名の設定`}</h2>\n    <p>{`newrelic.ymlにアプリ名を設定します。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\",\n        \"metastring\": \"config/newrelic.yml\",\n        \"config/newrelic.yml\": true\n      }}>{`common: &default_settings\n...\n  app_name: #{アプリケーション名}\n...\n`}</code></pre>\n    <h2>{`Postgles`}</h2>\n    <p>{`postgresqlの場合は特殊な設定が必要になります。\nなくても動きますが,New Relicの一部機能は動作しません。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\",\n        \"metastring\": \"config/newrelic.yml\",\n        \"config/newrelic.yml\": true\n      }}>{`common: &default_settings\n  transaction_tracer:\n    explain_enabled: false\n`}</code></pre>\n    <h2>{`ローカルで確認`}</h2>\n    <p>{`この状態でローカルで確認できます。`}<br parentName=\"p\"></br>{`\n`}{`ローカルがPostgresqlでなければ直前の対応は不要かもしれません。  `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://localhost:3000/newrelic\"\n      }}>{`http://localhost:3000/newrelic`}</a></p>\n    <h1>{`herokuの設定`}</h1>\n    <p>{`herokuではadd-onでnew relicと連携します。`}</p>\n    <h2>{`Add-onの設定`}</h2>\n    <p>{`add-on追加のためにはクレジットカードの情報が必須です。\n(無料プランがあります)`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://addons.heroku.com/newrelic\"\n      }}>{`New RelicのAdd-onページ`}</a>{`から設定を有効にしてください。`}</p>\n    <h2>{`環境変数の設定`}</h2>\n    <p><inlineCode parentName=\"p\">{`heroku config`}</inlineCode>{`で設定を変更。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`heroku config:set NEW_RELIC_APP_NAME=\"各自のアプリケーション名\"\nheroku config:set RACK_ENV=production\n`}</code></pre>\n    <h2>{`本番で確認`}</h2>\n    <p>{`このままherokuへのpushが成功した後、数分してからNew Relicにアクセスすれば接続確認できます。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}