(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{Bl7J:function(e,n,t){"use strict";var a=t("dwav"),r=t("q1tI"),s=t.n(r),l=t("Wbzz"),b=function(e){var n=e.siteTitle;return s.a.createElement("header",{style:{background:"white",marginBottom:"1.45rem"}},s.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},s.a.createElement("h1",{style:{margin:0}},s.a.createElement(l.Link,{to:"/",style:{color:"black",textDecoration:"none"}},n))))};b.defaultProps={siteTitle:""};var i=b;t("8ypT"),n.a=function(e){var n=e.children,t=a.data;return s.a.createElement(s.a.Fragment,null,s.a.createElement(i,{siteTitle:t.site.siteMetadata.title}),s.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0 1.0875rem 1.45rem"}},s.a.createElement("main",null,n),s.a.createElement("footer",null,"© ",(new Date).getFullYear(),", Built with"," ",s.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"),"by ",t.site.siteMetadata.author)))}},YpkL:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return i}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("q1tI");var a=t("7ljp"),r=t("Bl7J");var s={},l={_frontmatter:s},b=r.a;function i(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(a.b)(b,Object.assign({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"RailsアプリケーションでJavascriptプラグインの管理をgemに依存したくないなと思ったので、bowerなるものを試してみました。  "),Object(a.b)("p",null,"環境です。"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"bower 1.3.12"),Object(a.b)("li",{parentName:"ul"},"rails 4.1.6"),Object(a.b)("li",{parentName:"ul"},"ruby 2.1.2"),Object(a.b)("li",{parentName:"ul"},"heroku-buildpack-ruby-bower")),Object(a.b)("p",null,"今回は使いませんでしたが、bower-railsというgemの説明も最後に追記しています。"),Object(a.b)("h1",null,"Rails + bower + heroku + heroku-buildpack-ruby-bower"),Object(a.b)("p",null,"参考にしたのは",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://gist.github.com/afeld/5704079"}),"こちら"),"です。  "),Object(a.b)("h2",null,"herokuに設定追加"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"heroku create app_name\n\nbundle exec rake secret RAILS_ENV=production\n=> 2d9dc90XXXXXXXXXXXXX...\n\n# rake secretの結果を値として設定\nheroku config:add SECRET_KEY_BASE=2d9dc90XXXXXXXXXXXXX...\n\nheroku run bundle exec rake RAILS_ENV=production db:migrate\n\nheroku config:set BUILDPACK_URL='git://github.com/qnyp/heroku-buildpack-ruby-bower.git#run-bower' \n")),Object(a.b)("h2",null,".gitignore修正"),Object(a.b)("p",null,"bowerでコンポーネントをインストールするパスを管理対象外に設定しておきます。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:".gitignore",".gitignore":!0}),"/vendor/assets/components\n")),Object(a.b)("h2",null,"bowerでコンポーネント追加"),Object(a.b)("p",null,"npmでbowerをインストールします。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh"}),"npm install bower\n")),Object(a.b)("p",null,"続いてRailsアプリケーションのルートパスでbowerの設定を追加します。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-json",metastring:".bowerrc",".bowerrc":!0}),'{\n  "directory": "vendor/assets/components",\n  "json": "bower.json"\n}\n')),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-json",metastring:"bower.json","bower.json":!0}),'{\n  "name": "my application",\n  "dependencies": {\n    "moment": "latest"\n  }\n}\n')),Object(a.b)("p",null,"依存関係のあるコンポーネントをインストールします。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh"}),"bower install\n")),Object(a.b)("h2",null,"Railsの設定"),Object(a.b)("p",null,"お好みでGemファイル追加(このあたりはbowerと関係ないですね)"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:"Gemfile",Gemfile:!0}),"# このあたりはお好みで\ngem 'unicorn', '~> 4.8.3'\ngem 'pg', group: :production\ngem 'rails_12factor', group: :production\n")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:"Procfile",Procfile:!0}),"web: bundle exec unicorn -p $PORT\n")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:"config/environments/production.rb","config/environments/production.rb":!0}),"Rails.application.configure do\n  config.assets.compile = true\nend\n")),Object(a.b)("p",null,"bowerでインストールしたコンポーネントをassetsのパスに追加します。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:"config/initializers/assets.rb","config/initializers/assets.rb":!0}),"Rails.application.config.assets.paths << Rails.root.join('vendor', 'assets', 'components')\n")),Object(a.b)("h2",null,"コンポーネントの読み込み設定"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-js",metastring:"app/assets/javascript/application.js","app/assets/javascript/application.js":!0}),"...\n//= require moment/moment\n...\n")),Object(a.b)("h2",null,"公開設定"),Object(a.b)("p",null,"最後に修正をherokuにpushします。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh"}),"git add .\ngit commit\ngit push heroku master\n")),Object(a.b)("h1",null,"bower-rails"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"bower-rails"),"というgemがあったのですが、herokuへのデプロイのところで色々はまったので、今回は見送りました。",Object(a.b)("br",{parentName:"p"}),"\n","ローカルで試す分にはこのGemは非常に使いやすかったので、環境によっては導入すると良さそうです。  "),Object(a.b)("p",null,"こちらの基本的な使い方は以下です。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh"}),"# Bowerfile作成\n# rails g bower_rails:initialize json とすることで、bower.jsonを作成することも可能\nbundle exec rails g bower_rails:initialize\n=> アプリケーションルートに、Bowerfileが作成される\n\n# Bowerfileの編集\necho \"asset 'moment'\" >> Bowerjson\n\n# 依存関係の解決\nbundle exec rake bower:install\n=> vnedor/assets/bower_componentsにコンポーネントをインストール\n")),Object(a.b)("p",null,"上記に加え、",Object(a.b)("inlineCode",{parentName:"p"},"config/initializers/assets.rb"),"を修正することで利用できます。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb",metastring:"config/initializers/assets.rb","config/initializers/assets.rb":!0}),"Rails.application.config.assets.paths << Rails.root.join('vendor', 'assets', 'bower_components')\n")),Object(a.b)("p",null,"BowerfileがGemfileのように簡単な形式で書けて、bower.jsonを動的に生成してくれるので、使いやすいですね。  "))}i.isMDXComponent=!0},dwav:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"title":"jangajan.com","author":"@ta1kt0me"}}}}')}}]);
//# sourceMappingURL=component---src-pages-2014-10-05-bower-and-rails-on-heroku-md-5f27503af3e4617a39d5.js.map