{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/2014-10-14-rspec-memo.md"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCWAY,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,UAHF,MAIMN,EAAKC,KAAKC,aAAaK,Y,sNCnC9B,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,qCAIA,uCACA,yDACA,qBAAG,+BAAGC,WAAW,KAAQ,CACrB,KAAQ,6CADT,4CAEkD,kBAAIA,WAAW,MAFpE,KAGF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,wDADd,wDAGE,6CACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,UACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,UACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,YACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,eACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,yCACA,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,MAAhC,kBACA,kBAAIA,WAAW,MAAf,cAAmC,0BAAYA,WAAW,MAAvB,wBAErC,4CACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,aAAqF,0BAAYA,WAAW,MAAvB,WAEvF,8DACA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,MAA5B,KAAiF,0BAAYA,WAAW,MAAvB,WAAjF,gBAAsJ,0BAAYA,WAAW,MAAvB,WAAtJ,uBAEF,sBAAI,0BAAYA,WAAW,MAAvB,mBAAJ,IAAqE,0BAAYA,WAAW,MAAvB,oBACrE,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sCAApB,gBAAoH,0BAAYA,WAAW,MAAvB,+BAApH,gBACA,kBAAIA,WAAW,MAAf,gCAEF,uCACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4DAEtB,0CACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,OAApB,QAA6E,0BAAYA,WAAW,MAAvB,iBAA7E,OACA,kBAAIA,WAAW,MAAf,YAAiC,kBAAIA,WAAW,MAC5C,kBAAIA,WAAW,MAAf,kDACA,kBAAIA,WAAW,MAAf,oBAAyC,0BAAYA,WAAW,MAAvB,gBAAzC,MAAyG,0BAAYA,WAAW,MAAvB,iBAAzG,YAAgL,kBAAIA,WAAW,MAC3L,kBAAIA,WAAW,MAAf,uBAEJ,kBAAIA,WAAW,MAAf,kCAAuD,kBAAIA,WAAW,MAClE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,2CAQlCJ,EAAWK,gBAAiB,G","file":"component---src-pages-2014-10-14-rspec-memo-md-184fc323f0a7f118479a.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`rspecの学習中です。`}</p>\n    {\n      /* more */\n    }\n    <h1>{`rspecのワークショップ`}</h1>\n    <p>{`以下のチュートリアルでrspecの学習をした時のメモです。   `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://d.hatena.ne.jp/t-wada/20100228/p1\"\n      }}>{`http://d.hatena.ne.jp/t-wada/20100228/p1`}</a><br parentName=\"p\"></br>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://qiita.com/jnchito/items/624f6d5023c279046a1c\"\n      }}>{`http://qiita.com/jnchito/items/624f6d5023c279046a1c`}</a></p>\n    <h1>{`describeとcontextとit`}</h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`describe`}</inlineCode>{`は対象を説明`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`context`}</inlineCode>{`は状況を説明`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`it`}</inlineCode>{`は試験内容を説明`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`it`}</inlineCode>{`内に具体的な試験を記述`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`it`}</inlineCode>{`の引数の説明を省略しても試験内容をrspecが判断して仕様記述を組み立てる`}</li>\n      <li parentName=\"ul\">{`読みやすさ次第で`}<inlineCode parentName=\"li\">{`it`}</inlineCode>{`の文字列引数を使うことを推奨`}</li>\n      <li parentName=\"ul\">{`内容を確認したい時は、`}<inlineCode parentName=\"li\">{`rspec -fd specfile`}</inlineCode></li>\n    </ul>\n    <h1>{`beforeにテスト実行前処理を記述`}</h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`before`}</inlineCode>{`の引数のデフォルトは`}<inlineCode parentName=\"li\">{`:each`}</inlineCode></li>\n    </ul>\n    <h1>{`subjectでブロックの評価結果がit内のshouldのレシーバになる`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`明示的に`}<inlineCode parentName=\"li\">{`it`}</inlineCode>{`内で`}<inlineCode parentName=\"li\">{`subject`}</inlineCode>{`メソッドを利用することで、`}<inlineCode parentName=\"li\">{`subject`}</inlineCode>{`ブロックの評価結果を使うことができる`}</li>\n    </ul>\n    <h1><inlineCode parentName=\"h1\">{`shared_examples`}</inlineCode>{`と`}<inlineCode parentName=\"h1\">{`it_behaves_like`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`shared_examples_for 'キー名' do ~ end`}</inlineCode>{`とするとブロック内の処理を`}<inlineCode parentName=\"li\">{`it_should_behave_like 'キー名'`}</inlineCode>{`で呼び出してテストできる`}</li>\n      <li parentName=\"ul\">{`ただし、キー名は全てのテストで重複しないように注意する`}</li>\n    </ul>\n    <h1>{`predicateマッチャ`}</h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expect(xxx).to eq false -> expect(xxx).not_to be_empty`}</inlineCode></li>\n    </ul>\n    <h1>{`rspec3で標準から外れた機能`}</h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`its`}</inlineCode>{`メソッドは`}<inlineCode parentName=\"li\">{`rspec-its gem`}</inlineCode>{`で提供`}</li>\n      <li parentName=\"ul\">{`have マッチャ`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`サイズのチェックをテストしやすくするマッチャ(ただし、rspec3ではgemに外出しされた)`}</li>\n          <li parentName=\"ul\">{`have マッチャを使った場合、 `}<inlineCode parentName=\"li\">{`have(n).item`}</inlineCode>{` と `}<inlineCode parentName=\"li\">{`have(n).items`}</inlineCode>{` は互いに置換可能`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`nの値により自然な形にするのがいい`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`have(n).named_collection記法でもかける`}<ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`it {is_expected.to have(n).xxx }`}</inlineCode></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}