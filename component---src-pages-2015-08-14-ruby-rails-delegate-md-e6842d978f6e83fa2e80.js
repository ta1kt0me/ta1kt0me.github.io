(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{Bl7J:function(e,a,n){"use strict";var t=n("dwav"),r=n("q1tI"),l=n.n(r),i=n("Wbzz"),g=function(e){var a=e.siteTitle;return l.a.createElement("header",{style:{background:"white",marginBottom:"1.45rem"}},l.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},l.a.createElement("h1",{style:{margin:0}},l.a.createElement(i.Link,{to:"/",style:{color:"black",textDecoration:"none"}},a))))};g.defaultProps={siteTitle:""};var u=g;n("8ypT"),a.a=function(e){var a=e.children,n=t.data;return l.a.createElement(l.a.Fragment,null,l.a.createElement(u,{siteTitle:n.site.siteMetadata.title}),l.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0 1.0875rem 1.45rem"}},l.a.createElement("main",null,a),l.a.createElement("footer",null,"© ",(new Date).getFullYear(),", Built with"," ",l.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"),"by ",n.site.siteMetadata.author)))}},V5VN:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return l})),n.d(a,"default",(function(){return u}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var t=n("7ljp"),r=n("Bl7J");var l={},i={_frontmatter:l},g=r.a;function u(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(t.b)(g,Object.assign({},i,n,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,"委譲があまりよくわかっていなかったのでメモ。継承よりは使いやすそう。"),Object(t.b)("h1",null,"rubyのdelegate"),Object(t.b)("p",null,"Forwardableクラスに委譲のメソッドがあります。"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"require 'forwardable'\n\nclass Hoge\n  extend Forwardable\n\n  # also: def_delegators :@delegator, :name, :age\n  delegate [:name, :age] => :@delegator\n\n  def initialize args\n    @delegator = args == 'nakachi' ? Nakachi.new : Tanaka.new\n  end\n\n  class Nakachi\n    def name; 'I am Nakachi' end\n    def age; 100 end\n  end\n\n  class Tanaka\n    def name; 'I am Tanaka' end\n    def age; 10 end\n  end\nend\n\nhoge = Hoge.new 'nakachi'\nputs hoge.name #=> 'I am Nakachi'\nputs hoge.age  #=> 100\n\n")),Object(t.b)("h1",null,"railsのdelegate"),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"activesupport"),"でModuleのインスタンスメソッドとして定義されています。"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"require 'active_support'\nrequire 'active_support/core_ext'\n\nmodule DelegatorFuga\n  delegate :name, :age, to: :delegator\n\n  class Nakachi\n    def name; 'I am Nakachi' end\n    def age; 100 end\n  end\n\n  class Tanaka\n    def name; 'I am Tanaka' end\n    def age; 10 end\n  end\nend\n\nclass Fuga\n  include DelegatorFuga\n\n  attr_reader :delegator\n\n  def initialize args\n    @delegator = args == 'nakachi' ? DelegatorFuga::Nakachi.new : DelegatorFuga::Tanaka.new\n  end\nend\n\nfuga = Fuga.new 'nakachi'\nputs fuga.name #=> 'I am Nakachi'\nputs fuga.age  #=> 100\n")),Object(t.b)("p",null,"こっちには、",Object(t.b)("inlineCode",{parentName:"p"},"prefix"),"と",Object(t.b)("inlineCode",{parentName:"p"},"allow_nil"),"というオプションがある。"),Object(t.b)("h2",null,"allow_nil"),Object(t.b)("p",null,"委譲先がnilの場合でもメソッド呼び出し時にnilを返してくれるようになる。"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"> delegate :name, :age, to: :delegator, allow_nil: true\n> @delegator = args == 'nakachi' ? nil : DelegatorFuga::Tanaka.new\n\nfuga = Fuga.new 'nakachi'\n# method_missingは発生しない\nputs fuga.name #=> nil\nputs fuga.age  #=> nil\n")),Object(t.b)("h2",null,"prefix"),Object(t.b)("p",null,"delegateしたメソッドのprefixをつける。この場合、prefixをつけない形式でメソッドを呼び出すことはできなくなる。"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"> delegate :name, :age, to: :delegator, prefix: true\n\nfuga = Fuga.new 'nakachi'\nputs fuga.delegator_name\nputs fuga.delegator_age\n")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"> delegate :name, :age, to: :delegator, prefix: :my\n\nfuga = Fuga.new 'nakachi'\nputs fuga.my_name\nputs fuga.my_age\n")))}u.isMDXComponent=!0},dwav:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"title":"jangajan.com","author":"@ta1kt0me"}}}}')}}]);
//# sourceMappingURL=component---src-pages-2015-08-14-ruby-rails-delegate-md-e6842d978f6e83fa2e80.js.map