{"version":3,"sources":["webpack:///./src/pages/2014-09-04-unix-process-socket-in-ruby.md","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author"],"mappings":"iRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mCAAkB,kBAAIC,WAAW,MAAjC,KACF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,2CADd,iCAE4C,kBAAIA,WAAW,MAHzD,4CAQA,uDACA,8EACA,+BACA,6CAA4B,kBAAIA,WAAW,MAA3C,oDAC8C,kBAAIA,WAAW,MAD7D,wBAGA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,iFADT,8BAGH,8BACE,iBAAGA,WAAW,cAAd,uEAGF,8CACA,kCACA,2DAA0C,kBAAIA,WAAW,MAAzD,gDAC0C,kBAAIA,WAAW,MADzD,qCAGA,8BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,ukBAwBL,qBAAG,0BAAYA,WAAW,KAAvB,gBAAH,IAAgE,0BAAYA,WAAW,KAAvB,iBAAhE,2BAKJJ,EAAWK,gBAAiB,G,mFC5EtBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCWAY,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,UAHF,MAIMN,EAAKC,KAAKC,aAAaK,Y","file":"component---src-pages-2014-09-04-unix-process-socket-in-ruby-md-7ef9acaa9769dfcb3810.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`積読消化シリーズです。`}<br parentName=\"p\"></br>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://tatsu-zine.com/books/naruhounix\"\n      }}>{`なるほどUnixプロセス ― Rubyで学ぶUnixの基礎`}</a><br parentName=\"p\"></br>{`\n`}{`プロセス間通信を、昨日はpipe、今日はUnixソケットのところです。`}</p>\n    {\n      /* more */\n    }\n    <h1>{`Rubyのプロセス間通信でメッセージ（データグラム）を使う`}</h1>\n    <p>{`データの通信にストリームではなく、メッセージ（データグラム）を利用したい場合、UNIXソケットを使います。`}</p>\n    <h2>{`メッセージ`}</h2>\n    <p>{`昨日の最後にも載せた記事に説明があります。`}<br parentName=\"p\"></br>{`\n`}{`メッセージを利用する場合は、１通信が１メッセージとなるため、データのデリミタが不要です。`}<br parentName=\"p\"></br>{`\n`}{`(close処理が不要になる)`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://slashdot.jp/journal/160355/TCP%E3%81%A8UDP%E3%81%AE%E9%81%95%E3%81%84\"\n      }}>{`gatekeeperの日記： TCPとUDPの違い`}</a></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ところがデータグラム型ではメッセージ単位なのでメッセージの境界が保存されていて、\n読み込みと書き込みは常にペアでなければいけない。`}</p>\n    </blockquote>\n    <p>{`なお、パイプでは、メッセージは使えません。`}</p>\n    <h2>{`Unixソケット`}</h2>\n    <p>{`Unixソケットは、ソケットを利用したプロセス間通信の方法の一つです。`}<br parentName=\"p\"></br>{`\n`}{`メッセージを利用するためにはパイプではなく、Unixソケットでないといけません。`}<br parentName=\"p\"></br>{`\n`}{`pipeではできなかったデータの双方向の通信ができます。`}</p>\n    <h2>{`サンプル`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`require 'socket'\n\n# :DGRAMはメッセージ（データグラム）の利用を宣言\nchild_socket, parent_socket = Socket.pair(:UNIX, :DGRAM, 0)\nmaxlen = 1000 # メッセージのMaxサイズ\nfork do\n  # 子プロセスで使用しないsocketを閉じる\n  parent_socket.close\n  # 対となるSocketからのメッセージの通知を待つ\n  instruction = child_socket.recv(maxlen)\n  # 対となるSocketへメッセージ送信\n  child_socket.send(\"#{instruction} accomplished!\", 0)  \nend\n\n# 親プロセスで使用しないsocketを閉じる\nchild_socket.close\n# 対となるSocketへメッセージ送信\nparent_socket.send(\"Heavy lifting\", 0)\n# 対となるSocketからのメッセージの通知を待って表示する\n$stdout.puts parent_socket.recv(maxlen)\n# =>Parent_Socket accomplished!\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`child_socket`}</inlineCode>{`と`}<inlineCode parentName=\"p\">{`parent_socket`}</inlineCode>{`でそれぞれ、メッセージをやり取りしています。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}