(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"/Gpn":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return i}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),r=n("Bl7J");var c={},l={_frontmatter:c},o=r.a;function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(o,Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"積読消化シリーズです。",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"http://tatsu-zine.com/books/naruhounix"}),"なるほどUnixプロセス ― Rubyで学ぶUnixの基礎"),Object(a.b)("br",{parentName:"p"}),"\n","プロセス間通信を、昨日はpipe、今日はUnixソケットのところです。"),Object(a.b)("h1",null,"Rubyのプロセス間通信でメッセージ（データグラム）を使う"),Object(a.b)("p",null,"データの通信にストリームではなく、メッセージ（データグラム）を利用したい場合、UNIXソケットを使います。"),Object(a.b)("h2",null,"メッセージ"),Object(a.b)("p",null,"昨日の最後にも載せた記事に説明があります。",Object(a.b)("br",{parentName:"p"}),"\n","メッセージを利用する場合は、１通信が１メッセージとなるため、データのデリミタが不要です。",Object(a.b)("br",{parentName:"p"}),"\n","(close処理が不要になる)"),Object(a.b)("p",null,Object(a.b)("a",Object.assign({parentName:"p"},{href:"http://slashdot.jp/journal/160355/TCP%E3%81%A8UDP%E3%81%AE%E9%81%95%E3%81%84"}),"gatekeeperの日記： TCPとUDPの違い")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"ところがデータグラム型ではメッセージ単位なのでメッセージの境界が保存されていて、\n読み込みと書き込みは常にペアでなければいけない。")),Object(a.b)("p",null,"なお、パイプでは、メッセージは使えません。"),Object(a.b)("h2",null,"Unixソケット"),Object(a.b)("p",null,"Unixソケットは、ソケットを利用したプロセス間通信の方法の一つです。",Object(a.b)("br",{parentName:"p"}),"\n","メッセージを利用するためにはパイプではなく、Unixソケットでないといけません。",Object(a.b)("br",{parentName:"p"}),"\n","pipeではできなかったデータの双方向の通信ができます。"),Object(a.b)("h2",null,"サンプル"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-rb"}),'require \'socket\'\n\n# :DGRAMはメッセージ（データグラム）の利用を宣言\nchild_socket, parent_socket = Socket.pair(:UNIX, :DGRAM, 0)\nmaxlen = 1000 # メッセージのMaxサイズ\nfork do\n  # 子プロセスで使用しないsocketを閉じる\n  parent_socket.close\n  # 対となるSocketからのメッセージの通知を待つ\n  instruction = child_socket.recv(maxlen)\n  # 対となるSocketへメッセージ送信\n  child_socket.send("#{instruction} accomplished!", 0)  \nend\n\n# 親プロセスで使用しないsocketを閉じる\nchild_socket.close\n# 対となるSocketへメッセージ送信\nparent_socket.send("Heavy lifting", 0)\n# 対となるSocketからのメッセージの通知を待って表示する\n$stdout.puts parent_socket.recv(maxlen)\n# =>Parent_Socket accomplished!\n')),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"child_socket"),"と",Object(a.b)("inlineCode",{parentName:"p"},"parent_socket"),"でそれぞれ、メッセージをやり取りしています。"))}i.isMDXComponent=!0},Bl7J:function(e,t,n){"use strict";var a=n("dwav"),r=n("q1tI"),c=n.n(r),l=n("Wbzz"),o=function(e){var t=e.siteTitle;return c.a.createElement("header",{style:{background:"white",marginBottom:"1.45rem"}},c.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},c.a.createElement("h1",{style:{margin:0}},c.a.createElement(l.Link,{to:"/",style:{color:"black",textDecoration:"none"}},t))))};o.defaultProps={siteTitle:""};var i=o;n("8ypT"),t.a=function(e){var t=e.children,n=a.data;return c.a.createElement(c.a.Fragment,null,c.a.createElement(i,{siteTitle:n.site.siteMetadata.title}),c.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0 1.0875rem 1.45rem"}},c.a.createElement("main",null,t),c.a.createElement("footer",null,"© ",(new Date).getFullYear(),", Built with"," ",c.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"),"by ",n.site.siteMetadata.author)))}},dwav:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"title":"jangajan.com","author":"@ta1kt0me"}}}}')}}]);
//# sourceMappingURL=component---src-pages-2014-09-04-unix-process-socket-in-ruby-md-7ef9acaa9769dfcb3810.js.map