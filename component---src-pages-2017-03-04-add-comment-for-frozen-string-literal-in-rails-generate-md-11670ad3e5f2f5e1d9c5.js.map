{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/2017-03-04-add-comment-for-frozen-string-literal-in-rails-generate.md"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCWAY,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,UAHF,MAIMN,EAAKC,KAAKC,aAAaK,Y,iVCnC9B,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,qBAAG,0BAAYC,WAAW,KAAvB,kBAAH,sDAAoH,kBAAIA,WAAW,MAAnI,uBAKA,wFAEA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,sEADT,2EAGH,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,+4BA0CTJ,EAAWK,gBAAiB","file":"component---src-pages-2017-03-04-add-comment-for-frozen-string-literal-in-rails-generate-md-11670ad3e5f2f5e1d9c5.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><inlineCode parentName=\"p\">{`rails generate`}</inlineCode>{` したファイルにいちいちfrozen string literalのコメント追加するのは面倒ですよね。`}<br parentName=\"p\"></br>{`\n`}{`ということでモンキーパッチ。`}</p>\n    {\n      /* more */\n    }\n    <p>{`railsの5.1.0.beta1が公開されている時のmasterで試しました。\ninitializerに入れておけば動く。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://gist.github.com/ta1kt0me/6a7058d16621785d4f7038bde6cd3b98\"\n      }}>{`Add frozen string literal comment into generated files in rails v5.1.0`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`module AddFrozenStringLiteralComment\n  def add_frozen_string_literal_comment(dist)\n    if File.exist?(dist) && File.extname(dist) == '.rb'\n      File.open(dist, 'r') do |f|\n        body = f.read\n\n        File.open(dist, 'w') do |new_f|\n          new_f.write(\"# frozen_string_literal: true\\\\n\" + body)\n        end\n      end\n    end\n  end\nend\n\nmodule GeneratorPrepend\n  include AddFrozenStringLiteralComment\n\n  def invoke!\n    res = super\n    add_frozen_string_literal_comment(existing_migration)\n    res\n  end\nend\n\nmodule TemplatePrepend\n  include AddFrozenStringLiteralComment\n\n  def template(source, *args, &block)\n    res = super\n    add_frozen_string_literal_comment(args.first)\n    res\n  end\nend\n\nRails::Generators::Migration\nRails::Generators::Actions::CreateMigration.send :prepend, GeneratorPrepend\nRails::Generators::NamedBase.send :prepend, TemplatePrepend\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}