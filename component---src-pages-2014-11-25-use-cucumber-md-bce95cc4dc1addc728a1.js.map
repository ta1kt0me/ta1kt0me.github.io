{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/2014-11-25-use-cucumber.md"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-2014-11-25-use-cucumber-md-bce95cc4dc1addc728a1.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Railsでcucumberを動かしてみます。`}<br parentName=\"p\"></br>{`\n`}{`サンプルソースはこちらです。`}<br parentName=\"p\"></br>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ta1kt0me/cucumber-test/tree/first-test\"\n      }}>{`ta1kt0me/cucumber-test`}</a></p>\n    <p>{`cucumberを使うことになったので簡単なサンプルを作成してみます。  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`ライブラリ`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`バージョン`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`ruby`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`2.1.5`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`rails`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`4.1.5`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`cucumber`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`1.3.17`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`構成はこんな感じです。  `}</p>\n    {\n      /* more */\n    }\n    <h1>{`Cucumberとは`}</h1>\n    <p>{`Rubyで書けるインテグレーションテストのためのテストフレームワークの一つです。\nCucumber自体は、Railsに依存していないため、Sinatraのアプリでも使用可能です。`}</p>\n    <h1>{`今回やること`}</h1>\n    <p>{`!. cucumberのインストール\n2. scaffoldで作成したアプリのトップページを表示するテストを書く`}</p>\n    <p>{`事前にscaffoldで適当なアプリを作成します。`}<br parentName=\"p\"></br>{`\n`}{`今回は以下のコマンドを実行しました。  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`bundle exec rails g scaffold Book title:string author:string price:integer\n`}</code></pre>\n    <h1>{`Cucumber`}</h1>\n    <h2>{`最低限覚えること`}</h2>\n    <p>{`Cucumberのテストシナリオは、GherkinというDSLで書きます。`}<br parentName=\"p\"></br>{`\n`}{`今回はGherkinの一部だけを利用して簡単なテストを書きます。`}<br parentName=\"p\"></br>{`\n`}{`Gherkinについては、`}<a parentName=\"p\" {...{\n        \"href\": \"http://blog.eiel.info/blog/2013/02/12/gherkin/\"\n      }}>{`こちら`}</a>{`のサイトにわかりやすい解説があります。`}<br parentName=\"p\"></br>{`\n`}{`また、今回のサンプルですが`}<a parentName=\"p\" {...{\n        \"href\": \"https://semaphoreapp.com/blog/2013/08/14/setting-up-bdd-stack-on-a-new-rails-4-application.html\"\n      }}>{`こちら`}</a>{`のサイトの内容をもとに確認しています。`}</p>\n    <h3>{`言葉`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Feature`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`機能を表します。1つのファイルに1つだけ`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Scenario`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`テストのシナリオです`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`When`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`ユーザーの動作を表します。リンクをクリックする、とか`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Then`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Whenの結果どうなるか、を表します`}</li>\n        </ul></li>\n    </ul>\n    <p>{`階層構造としてはこうなります。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Feature: 機能A\n    Scenario: シナリオ1\n        When ユーザーがTopページにきた時\n        Then タイトルにhogeが表示されている\n`}</code></pre>\n    <h3>{`ファイル`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`features/hoge.feature`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`テストのシナリオを書くところ`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`features/step_definitions/hoge.rb`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`シナリオの動作を定義するところ`}</li>\n        </ul></li>\n    </ul>\n    <h2>{`インストール`}</h2>\n    <h3>{`Gemfile変更 & install`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"Gemfile\",\n        \"Gemfile\": true\n      }}>{`group :test do\n  # gem 'cucumber' # githubのサンプルコードには入ってますが、いらないです。\n  gem 'cucumber-rails', require: false\n  gem 'database_cleaner'\nend\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`bundle install\nbundle exec rails generate cucumber:install\n`}</code></pre>\n    <h2>{`シナリオを書く`}</h2>\n    <p>{`今回はユーザーがトップページにいる時に、タイトル文字列'Listing books'が表示されていることを確認します。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/home_page.feature\",\n        \"features/home_page.feature\": true\n      }}>{`Feature: Home page\n\n  Scenario: Viwing application's home page\n    When I am on the top page\n    Then I should see the 'Listing books'\n`}</code></pre>\n    <p>{`この時点でテストを実行するとエラーが出ます。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ bundle exec rake cucumber\n   Then I should see the 'Listing books'  # features/home_page.feature:5\n      Undefined step: \"I should see the 'Listing books'\" (Cucumber::Undefined)\n      features/home_page.feature:5:in \\`Then I should see the 'Listing books''\n\n1 scenario (1 undefined)\n2 steps (2 undefined)\n0m0.005s\n\nYou can implement step definitions for undefined steps with these snippets:\n\nWhen(/^I am on the homepage$/) do\n  pending # express the regexp above with the code you wish you had\nend\n\nThen(/^I should see the 'Listing books'$/) do\n  pending # express the regexp above with the code you wish you had\nend\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`When`}</inlineCode>{`と`}<inlineCode parentName=\"p\">{`Then`}</inlineCode>{`で指定した動作（ステップ）が定義されてないことが原因です。`}</p>\n    <h2>{`ステップを定義する`}</h2>\n    <p>{`シナリオに書いた`}<inlineCode parentName=\"p\">{`When`}</inlineCode>{`と`}<inlineCode parentName=\"p\">{`Then`}</inlineCode>{`のステップを定義します。`}<br parentName=\"p\"></br>{`\n`}{`文字列一致で挙動を設定します。  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/step_definitions/home_page_steps.rb\",\n        \"features/step_definitions/home_page_steps.rb\": true\n      }}>{`When(/^I am on the top page$/) do\n  visit root_path\nend\n\nThen(/^I should see the '(.*?)'$/) do |title|\n  assert page.body.scan(title).length > 0\nend\n`}</code></pre>\n    <p>{`もう一度実行します。  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ bundle exec rake cucumber\neature: Home page\n\n  Scenario: Viwing application's home page # features/home_page.feature:3\n    When I am on the top page              # features/step_definitions/home_page_steps.rb:1\n    Then I should see the 'Listing books'  # features/step_definitions/home_page_steps.rb:5\n\n1 scenario (1 passed)\n2 steps (2 passed)\n0m0.081s\n`}</code></pre>\n    <p>{`成功しましたね。`}<br parentName=\"p\"></br>{`\n`}{`rspecと組み合わせることでrspecの記法できるようなります。`}<br parentName=\"p\"></br>{`\n`}{`またcapybara-webkitやwebratと組み合わせることで、よりStepが簡単に実装できるようになると思います。  `}</p>\n    <h1>{`課題`}</h1>\n    <p>{`次はFactorygirlを使ってシナリオの前提条件となるGiveを使ってみます。  `}</p>\n    <p>{`しまった。cucumberの最初のcは大文字が正しいかもしれない...`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}