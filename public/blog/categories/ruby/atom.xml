<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | JanGaJan.com]]></title>
  <link href="http://jangajan.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://jangajan.com/"/>
  <updated>2015-01-22T00:27:45+09:00</updated>
  <id>http://jangajan.com/</id>
  <author>
    <name><![CDATA[talkto_me]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gem Reading - Jquery-rails]]></title>
    <link href="http://jangajan.com/blog/2015/01/21/gem-reading-jquery-rails/"/>
    <updated>2015-01-21T23:14:52+09:00</updated>
    <id>http://jangajan.com/blog/2015/01/21/gem-reading-jquery-rails</id>
    <content type="html"><![CDATA[<p>簡単なやつから攻める。<br/>
まずは読むことになれます。ということで、jquery-rails。</p>

<!-- more -->


<h2>眺める</h2>

<p>lib配下を見ても、これといったファイルないな〜と&hellip;</p>

<pre><code class="sh">lib
├── jquery
│   ├── assert_select.rb
│   ├── rails
│   │   ├── engine.rb
│   │   └── version.rb
│   └── rails.rb
└── jquery-rails.rb

2 directories, 5 files
</code></pre>

<ul>
<li>engine.rb

<ul>
<li>Engin生成</li>
</ul>
</li>
<li>version.rb

<ul>
<li>現在対応しているjqeruyのバージョンを定数で定義</li>
</ul>
</li>
<li>assert_select.rb

<ul>
<li>assert_select_jqueryというテストメソッドを提供してくれる</li>
</ul>
</li>
</ul>


<p>他はモジュール定義してたり、requireしてたり。</p>

<pre><code class="sh">vendor/assets
└── javascripts
    ├── jquery.js
    ├── jquery.min.js
    ├── jquery.min.map
    ├── jquery2.js
    ├── jquery2.min.js
    ├── jquery2.min.map
    └── jquery_ujs.js
</code></pre>

<p>vendor/assets/javascriptsの中に一式揃ってますねー。<br/>
そういえば、Rakefileあるじゃん。</p>

<pre><code class="sh">rake build              # Build jquery-rails-4.0.3.gem into the pkg directory
rake install            # Build and install jquery-rails-4.0.3.gem into system gems
rake release            # Create tag v4.0.3 and build and push jquery-rails-4.0.3.gem to Rubygems
rake update_jquery      # Update jQuery versions
rake update_jquery_ujs  # Update jQuery UJS version
</code></pre>

<p>中を見てみると、build、install以外のコマンドが定義されてました。</p>

<p><code>release</code> は <code>version.rb</code> と <code>vendor/assets/javascripts</code>にダウンロードしたファイルのバージョン番号比較チェックしている。<br/>
<code>update_jquery</code> と <code>update_jquery_ujs</code> は <code>vendor/assets/javascripts</code> 下に該当するバージョンのファイルをcurlしてきている。<br/>
<code>vendor/assets/javascripts</code> に全部突っ込んでしまっているんですね。</p>

<p>jsはでかかったんで、ここまで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gem Reading - Active_emoji]]></title>
    <link href="http://jangajan.com/blog/2015/01/21/gem-reading-active-emoji/"/>
    <updated>2015-01-21T23:14:19+09:00</updated>
    <id>http://jangajan.com/blog/2015/01/21/gem-reading-active-emoji</id>
    <content type="html"><![CDATA[<p>今年の目標にGemを読むというのをあげたので、少しずつやっていきます。
今日Ginza.rbに参加して知った、<a href="https://github.com/sferik/active_emoji">active_emoji</a>を読んでみます。</p>

<!-- more -->


<p>Macでchromeだとソースの絵文字が文字化けするのでSafariでみましょう。<br/>
コミットコメントから賑やかですね。
lib配下にcore拡張があります。全部ただのaliasでした。</p>

<p>何かあれば追加するのが良いでしょう。<br/>
最後に頑張ってサンプルを読みましょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyのヒアドキュメント]]></title>
    <link href="http://jangajan.com/blog/2015/01/15/rubyheredocument/"/>
    <updated>2015-01-15T19:18:55+09:00</updated>
    <id>http://jangajan.com/blog/2015/01/15/rubyheredocument</id>
    <content type="html"><![CDATA[<p>あまり使う機会もなく理解できていない部分があったのでヒアドキュメントについて整理しました。<br/>
ヒアドキュメントって、heredocumentなんですね。hearだと思ってた&hellip;</p>

<p>参考にしたのは<a href="http://docs.ruby-lang.org/ja/2.1.0/doc/spec=2fliteral.html#here">2.1のドキュメント</a>です。</p>

<!-- more -->


<h2>書き方</h2>

<pre><code class="rb ">print &lt;&lt;EOS  # &lt;&lt;の後に空白を入れたらエラー
  hoge
  fuga
EOS
# 終了ラベルは行頭から始める必要がある
</code></pre>

<h2>&lt;&lt;-</h2>

<p>末尾のEOSの前にインデントを入れてもOK</p>

<h2>&lt;&lt;&lsquo;EOS&rsquo;</h2>

<p>開始ラベルをシングルクォーテーションで囲んだ場合、ヒアドキュメント内で文字列展開しない</p>

<h2>&lt;&lt;&ldquo;EOS&rdquo;</h2>

<p>開始ラベルをダブルクォーテーションで囲んだ場合、ヒアドキュメント内で文字列展開する</p>

<h2>&lt;&lt;`EOS`</h2>

<p>開始ラベルをバッククォートで囲んだ場合、ヒアドキュメント内のコマンドの実行結果を表示する</p>

<h2>複数指定</h2>

<pre><code class="rb">print &lt;&lt;EOS1, &lt;&lt;EOS2
  eos1
EOS1  # ここまでがEOS1のヒアドキュメント、これ以降はEOS2のヒアドキュメント
  eos2
EOS2
# ここまでがEOS2のヒアドキュメント、  
</code></pre>

<p>EOS1終了ラベルを書く前にEOS2終了ラベルを書いたとしても、EOS1終了ラベルが出てくるまで、EOS1のヒアドキュメントとなる</p>

<h2>その他</h2>

<h3>開始ラベルの次の行からヒアドキュメントになる</h3>

<p>読みづらいからあまりしないと思うけれど、例えば
<code>rb
printf('%s%d', &lt;&lt;EOS, 1000)
  hoge
EOS
</code></p>

<p>という場合に、こうしたらエラー。
<code>
printf('%s%d', &lt;&lt;EOS
             , 1000)
  hoge
EOS
</code></p>

<p>コメントの不自然はご愛嬌です。嘘です。一番最後に表示したことで、表示がおかしくなったためです。<br/>
また何かあったら追記します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MetaNight 第4回を開催しました]]></title>
    <link href="http://jangajan.com/blog/2014/12/21/e-g-d-meta-night-4th/"/>
    <updated>2014-12-21T18:25:54+09:00</updated>
    <id>http://jangajan.com/blog/2014/12/21/e-g-d-meta-night-4th</id>
    <content type="html"><![CDATA[<p>イベント概要については、<a href="/blog/2014/11/02/about-meta-night/">About MetaNight</a>をご覧ください。</p>

<p><a href="http://e-g-d.doorkeeper.jp/">MetaNight</a>という<a href="http://www.amazon.co.jp/gp/product/B00N9I0RMQ/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00N9I0RMQ&amp;linkCode=as2&amp;tag=pochan0919-22">Metaprogramming Ruby 2</a>の読書会の第４回目を開催しました。</p>

<p><a href="http://www.amazon.co.jp/gp/product/B00N9I0RMQ/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B00N9I0RMQ&linkCode=as2&tag=pochan0919-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B00N9I0RMQ&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=pochan0919-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=pochan0919-22&l=as2&o=9&a=B00N9I0RMQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<!-- more -->


<h1>活動内容</h1>

<p>Part 1 Chapter2 の Inside the Object ModelからThe Truth About Classesの前までやりました。<br/>
読みながらの意見とかはこちらに載せてあります。<br/>
<a href="https://trello.com/b/djxLBmZ8/metanight-4th">https://trello.com/b/djxLBmZ8/metanight-4th</a></p>

<h1>感想</h1>

<p>PUBLIC HOUSEに行きました。</p>

<h2>inside the object model</h2>

<p>Billがさらっと書いた図がこの部分で言いたいことを全てを象徴しています。オブジェクトとクラス、インスタンス変数とメソッドの関係についてです。<br/>
今回の内容でRubyにおけるオブジェクトとクラスの役割分担や関係性が少しずつ見えてきました。図で視覚的に理解するというのは非常に大事ですね。</p>

<p>立場が変わると、言葉の意味が変わってくるという点も興味深かったです。<br/>
クラスはオブジェクトが呼び出すことのできる<code>メソッド</code>を定義しているけれども、正確には、クラスはオブジェクトが呼び出すことのできる<code>インスタンスメソッド</code>を定義しています。クラスから見た<code>インスタンスメソッド</code>はオブジェクトから見た<code>メソッド</code>となります。<br/>
<a href="https://trello.com/c/5nrd8XoA/36--">メソッドの差分を見てみた</a>で試してみました。</p>

<pre><code class="rb">obj = Object.new
Object.instance_methods - obj.methods
=&gt; []
obj.methods - Object.instance_methods
=&gt; []
</code></pre>

<p>となります。ちなみに、比較対象をObject.methodsにすると差分が出てきます。これについては後々出てくると思うのでちょっと置いておきます。</p>

<p>他にも<code>methods</code>や<code>instance_methods</code>のようなオブジェクトの中を参照するコードのことを<code>introspective code</code>と言っているようでしたが、これは一般的な用語なのかな？と疑問に感じたりしました。</p>

<h2>英語</h2>

<ul>
<li>Let’s wrap it all up</li>
</ul>


<p>しっくりきたのは、<code>まとめましょう</code>。</p>

<ul>
<li>OO speak</li>
</ul>


<p>OOはObject-Oriented 慣れないと？？ですね。</p>

<ul>
<li>spring into</li>
</ul>


<p>湧き上がる、という表現に落ち着きました。ないところから自然と生まれる、というニュアンスなのかなぁ&hellip;<br/>
「Instance variables just spring into existence when you assign them a value」というところで使われていた。お洒落な言い回し。</p>

<h2>その他</h2>

<ul>
<li>クラス図っぽい図が出てきたことを皮切りに、UMLやBPMNについて</li>
<li>object_idはメソッドだった(どこかに持っているのかな？そういう疑問は<a href="http://www.amazon.co.jp/gp/product/4274050653/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274050653&amp;linkCode=as2&amp;tag=pochan0919-22">これ</a>を読んで解決しよう！)</li>
</ul>


<p>第5回は1月にやります！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MetaNight 第3回を開催しました]]></title>
    <link href="http://jangajan.com/blog/2014/12/03/e-g-d-meta-night-3rd/"/>
    <updated>2014-12-03T23:55:01+09:00</updated>
    <id>http://jangajan.com/blog/2014/12/03/e-g-d-meta-night-3rd</id>
    <content type="html"><![CDATA[<p>イベント概要については、<a href="/blog/2014/11/02/about-meta-night/">About MetaNight</a>をご覧ください。</p>

<p><a href="http://e-g-d.doorkeeper.jp/events/16300">MetaNight</a>という<a href="http://www.amazon.co.jp/gp/product/B00N9I0RMQ/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00N9I0RMQ&amp;linkCode=as2&amp;tag=pochan0919-22">Metaprogramming Ruby 2</a>の読書会の第３回目を開催しました。</p>

<p><a href="http://www.amazon.co.jp/gp/product/B00N9I0RMQ/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B00N9I0RMQ&linkCode=as2&tag=pochan0919-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B00N9I0RMQ&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=pochan0919-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=pochan0919-22&l=as2&o=9&a=B00N9I0RMQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<!-- more -->


<h1>活動内容</h1>

<p>Part 1 Chapter 2のThe Problem with Open ClassesからChapter 2の終わりまでやりました。<br/>
読みながらの意見とかはこちらに載せてあります。<br/>
<a href="https://trello.com/b/5WFCQ2ER/metanight-3rd">https://trello.com/b/5WFCQ2ER/metanight-3rd</a></p>

<h1>感想</h1>

<p>前回ダメだったフリーマンカフェに行きました。</p>

<h2>a dark side of open class</h2>

<p>オープンクラスのネガティブな側面が紹介されていました。<br/>
Monkeypatchの例としてリファクタリングの過程で<code>Array#replace</code>というメソッドを用意すると、既存機能をoverrideしてしまってテストでこけたという内容です。<br/>
テストのおかげでリファクタリングの不具合に気付かせておいてさりげなくテストいいぜアピールをしていますね。</p>

<p>overrideは必ずしも悪いことではなくて、例えばRailsなんかでも、<code>require</code>メソッドをoverrideしていたりします。Railsは標準ライブラリのクラスにも様々なメソッドを追加して、あると便利！と思わせるものは多いです。</p>

<p>Billがさらっと、<code>grep(/regex/)</code>を使っていて、pipe感覚でメソッドチェインをできるのはRubyで書いていていいところだという気づきもありました。</p>

<p>それと<code>Array#replace</code>は実は破壊的らしい。Ruby Sliverのひっかけ問題によく出るので要注意らしい！</p>

<h2>英語</h2>

<ul>
<li>fire up irb</li>
</ul>


<p>irbを起動する、というニュアンス。発火を表現するいい日本語ってありそうで見つからなかった。</p>

<ul>
<li>perplex</li>
</ul>


<p>なぜconfuseではダメなのか。ニュアンスの違いが難しい。</p>

<ul>
<li>pique</li>
</ul>


<p>駆り立てる。ネガティブな意味合いを持っている表現だけど、ここの場合だとどうなんだろう。</p>

<h2>その他</h2>

<ul>
<li>エディターは何を使っているのか。４人全員バラバラだった</li>
<li>スクラムというものについてかじりました</li>
<li>tapはメソッドチェイン中にログ出力したいときに使いやすそう</li>
</ul>


<p>第4回を12月中にできたらやりたいな。</p>
]]></content>
  </entry>
  
</feed>
