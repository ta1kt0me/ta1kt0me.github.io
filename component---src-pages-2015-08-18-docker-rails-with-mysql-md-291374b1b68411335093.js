(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{Bl7J:function(e,t,n){"use strict";var a=n("dwav"),r=n("q1tI"),c=n.n(r),b=n("Wbzz"),l=function(e){var t=e.siteTitle;return c.a.createElement("header",{style:{background:"white",marginBottom:"1.45rem"}},c.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},c.a.createElement("h1",{style:{margin:0}},c.a.createElement(b.Link,{to:"/",style:{color:"black",textDecoration:"none"}},t))))};l.defaultProps={siteTitle:""};var o=l;n("8ypT"),t.a=function(e){var t=e.children,n=a.data;return c.a.createElement(c.a.Fragment,null,c.a.createElement(o,{siteTitle:n.site.siteMetadata.title}),c.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0 1.0875rem 1.45rem"}},c.a.createElement("main",null,t),c.a.createElement("footer",null,"© ",(new Date).getFullYear(),", Built with"," ",c.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"),"by ",n.site.siteMetadata.author)))}},YAXn:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return o}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),r=n("Bl7J");var c={},b={_frontmatter:c},l=r.a;function o(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(l,Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"docker周りが賑わっているので簡単な初期構築。\nまずは、docker-composeを使ったmysqlのRailsアプリケーションの環境を構築してみます。"),Object(a.b)("p",null,"ソースコードは",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/suburi/docker-mysql-rails"}),"こちら"),"。"),Object(a.b)("p",null,"今回はRailsアプリケーション作成済みの前提です。"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:"left"}),"tool"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:"right"}),"version"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Ruby"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"right"}),"2.2.2")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Rails"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"right"}),"4.2.3")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"docker"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"right"}),"1.8.1")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"mysql"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"right"}),"5.6.26")))),Object(a.b)("h2",null,"ツールのインストール"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"brew install Caskroom/cask/virtualbox\n# docker-swarmは今回は使わない\nbrew install docker docker-machine docker-compose docker-swarm\n# この下は順番が怪しい\ndocker-machine create --driver virtualbox default\neval $(docker-machine env default)\ndocker-machine start default\n")),Object(a.b)("p",null,Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://docs.docker.com/machine/get-started/"}),"https://docs.docker.com/machine/get-started/")),Object(a.b)("h2",null,"Dockerfileの作成"),Object(a.b)("p",null,"公式にDockerでRails環境を構築する手順があるのですが、Rubyのバージョン以外全て一緒です。\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://docs.docker.com/compose/rails/"}),"https://docs.docker.com/compose/rails/")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"FROM ruby:2.2.2\nRUN apt-get update -qq && apt-get install -y build-essential libpq-dev\nRUN mkdir /myapp\nWORKDIR /myapp\nADD Gemfile /myapp/Gemfile\nRUN bundle install\nADD . /myapp\n")),Object(a.b)("h2",null,"docker-composeの作成"),Object(a.b)("p",null,"上記のサンプルと同様、dbとwebの2台構成にしています。\nmysqlの場合、",Object(a.b)("inlineCode",{parentName:"p"},"MYSQL_ROOT_PASSWORD"),"という環境変数は、必須項目となります。\nlatestのバージョンは利用するタイミングによって変わる可能性があります。\n詳しくは",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://hub.docker.com/_/mysql/"}),"Docker Hub のmysql"),"を確認してください。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"db:\n  image: mysql:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=root\nweb:\n  build: .\n  command: bundle exec rails s -p 3000 -b '0.0.0.0'\n  volumes:\n    - .:/myapp\n    - ./tools/mysql:/etc/mysql/conf.d\n  ports:\n    - \"3000:3000\"\n  links:\n    - db\n")),Object(a.b)("p",null,"my.cnfはカスタマイズしたものを利用したいので、リポジトリに",Object(a.b)("inlineCode",{parentName:"p"},"${RAILS_ROOT}/tools/mysql/my.cnf"),"という設定ファイルを作成し、",Object(a.b)("inlineCode",{parentName:"p"},"- ./tools/mysql:/etc/mysql/conf.d"),"の行を追加してください。特にカスタマイズする必要がなければこの行は不要です。"),Object(a.b)("h2",null,"database接続設定"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"default: &default\n  adapter: mysql2\n  encoding: utf8\n  reconnect: false\n  pool: 5\n  host: db\n  port: 3306\n  username: root\n  password: root\n  timeout: 5000\n\ndevelopment:\n  <<: *default\n  database: app_development\n")),Object(a.b)("p",null,"hostは",Object(a.b)("inlineCode",{parentName:"p"},"db"),"という名前になります。docker-compose.ymlのdbのキーと同じになりますね。adapterを",Object(a.b)("inlineCode",{parentName:"p"},"mysql2"),"にしているので、Gemfileにも忘れずに、",Object(a.b)("inlineCode",{parentName:"p"},"gem 'mysql2'"),"を追加します。"),Object(a.b)("h2",null,"migrate"),Object(a.b)("p",null,"ここまでが完了したら、アプリ起動まで後少し。"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"cd ${RAILS_ROOT}\ndocker-compose build\ndocker-compose run web db:create\ndocker-compose run web db:migrate\n")),Object(a.b)("h2",null,"アプリ起動"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"docker-compose up\n# 別ターミナルで\nopen http://$(docker-machine ip default):3000\n")))}o.isMDXComponent=!0},dwav:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"title":"jangajan.com","author":"@ta1kt0me"}}}}')}}]);
//# sourceMappingURL=component---src-pages-2015-08-18-docker-rails-with-mysql-md-291374b1b68411335093.js.map