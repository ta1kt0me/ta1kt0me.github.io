{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/2014-11-26-use-cucumber-2.md"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","author","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-2014-11-26-use-cucumber-2-md-2a4af6ef56ced6be9c5f.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          by {data.site.siteMetadata.author}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jangajan.com/jangajan.com/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {\n      /* <a href=\"{{ root_url }}{% post_url 2014-11-25-use-cucumber %}\">前回</a> */\n    }\n    <p>{`に引き続き簡単なCucumberのテストケースを作ります。`}</p>\n    <p>{`サンプルソースはこちらです。`}<br parentName=\"p\"></br>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ta1kt0me/cucumber-test/tree/forth-test\"\n      }}>{`ta1kt0me/cucumber-test`}</a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`ライブラリ`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`バージョン`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`ruby`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`2.1.5`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`rails`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`4.1.5`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`cucumber`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`1.3.17`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* more */\n    }\n    <h1>{`今回やること`}</h1>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`given`}</inlineCode>{`を使う`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`and`}</inlineCode>{`を使う`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`background`}</inlineCode>{`を使う`}</li>\n      <li parentName=\"ol\">{`1つのシナリオにWhen-Thenを複数回書く`}</li>\n    </ol>\n    <h1>{`given`}</h1>\n    <p>{`givenを利用して、テストデータの投入を行います。`}<br parentName=\"p\"></br>{`\n`}{`Factory Girl使います。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"Gemfile\",\n        \"Gemfile\": true\n      }}>{`group :test do\n  gem 'cucumber-rails', require: false\n  gem 'database_cleaner'\n  gem 'factory_girl_rails' # 追加\nend\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`$ bundle\n$ bundle exec rails g factory_girl:model Book title:string author:string price:integer\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/home_page.feature\",\n        \"features/home_page.feature\": true\n      }}>{`  ...\n  Scenario: Viwing application's home page\n    # 追加\n    Given there's a book titled 'Alice\\\\'s Adventures in Wonderland' with 'Lewis Carroll' author, '1000' yen\n    When I am on the top page\n    ...\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/step_definitions/home_page_steps.rb\",\n        \"features/step_definitions/home_page_steps.rb\": true\n      }}>{`# 追加\nGiven(/^there's a book titled '(.*?)' with '(.*?)' author, '(\\\\d+)' yen$/) do |title, author, price|\n  @book = FactoryGirl.create(:book, title: title, author: author, price: price)\nend\n...\n`}</code></pre>\n    <p>{`(自分用メモ:改善点)`}<br parentName=\"p\"></br>{`\n`}{`シングルクォートで囲まないでもいいかも。`}<br parentName=\"p\"></br>{`\n`}{`テストケース内で利用しない限りあえてインスタンス変数にする必要もないなー。  `}</p>\n    <h1>{`and`}</h1>\n    <p>{`続いてand。これは簡単です。  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/home_page.feature\",\n        \"features/home_page.feature\": true\n      }}>{`    ...\n    Then I should see the 'Listing books'\n    And  I should see the 'Alice\\\\&#39;s Adventures in Wonderland'\n`}</code></pre>\n    <p>{`応用きくやつです。`}</p>\n    <h1>{`background`}</h1>\n    <p>{`シナリオの前に複雑な操作や処理をしたい場合に有効です。`}<br parentName=\"p\"></br>{`\n`}{`Bookの作成ページをテストするシナリオの前段として、トップページを表示する操作をbackgroundで書いてみます。`}<br parentName=\"p\"></br>{`\n`}{`なお、このシナリオではリンク・ボタン操作やフィールド入力をするので、便利なcapybara-webkitを導入します。  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`group :test do\n  gem 'cucumber-rails', require: false\n  gem 'database_cleaner'\n  gem 'factory_girl_rails'\n  gem 'capybara-webkit' # 追加\nend\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`$ bundle\n`}</code></pre>\n    <p>{`新しいシナリオ、new_page.featureを作ります。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/new_page.feature\",\n        \"features/new_page.feature\": true\n      }}>{`Feature: New Page\n\n  Background:\n    Given I go to the top page\n\n  Scenario: Adding New Book\n    When I click 'New Book' link\n    Then I should see the 'New book'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/step_definitions/new_page_steps.rb\",\n        \"features/step_definitions/new_page_steps.rb\": true\n      }}>{`Given(/^I go to the top page$/) do\n  visit root_path\nend\n\nWhen(/^I click '(.*?)' link$/) do |link_name|\n  click_link(link_name)\nend\n`}</code></pre>\n    <h1>{`1つのシナリオにWhen-Thenを複数回書く`}</h1>\n    <p>{`new_page.featureを完成させましょう。`}</p>\n    <ol>\n      <li parentName=\"ol\">{`'New Book'リンクを押したら、'New Book'タイトルが表示される`}</li>\n      <li parentName=\"ol\">{`'Title','Author','Price'を入力して、'Create Book'ボタンを押したら、'Book was successfully created.'というメッセージと入力した内容が表示される`}</li>\n    </ol>\n    <p>{`というシナリオを作ります。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/new_page.feature\",\n        \"features/new_page.feature\": true\n      }}>{`  ...\n  Scenario: Adding New Book\n    When I click 'New Book' link\n    Then I should see the 'New book'\n    When I fill in 'Title' with 'Star Wars'\n    And I fill in 'Author' with 'George Walton Lucas, Jr'\n    And I fill in 'Price' with '2980'\n    And I click 'Create Book' button\n    Then I should see the 'Book was successfully created.'\n    And I should see the 'Star Wars'\n    And I should see the 'George Walton Lucas, Jr'\n    And I should see the '2980'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\",\n        \"metastring\": \"features/step_definitions/new_page_steps.rb\",\n        \"features/step_definitions/new_page_steps.rb\": true\n      }}>{`...\nWhen(/^I click '(.*?)' button$/) do |button_name|\n  click_button(button_name)\nend\n\nWhen(/^I fill in '(.*?)' with '(.*?)'$/) do |field, value|\n  fill_in(field, with: value)\nend\n`}</code></pre>\n    <p>{`capybara-webkitですが、`}<a parentName=\"p\" {...{\n        \"href\": \"https://gist.github.com/zhengjia/428105\"\n      }}>{`チートシート`}</a>{`があるので有効活用しましょう。`}</p>\n    <p>{`stepsで定義した操作は共通化してあげると良いですね。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}